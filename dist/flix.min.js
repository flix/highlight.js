/*! `flix` grammar compiled for Highlight.js 11.6.0 */
(()=>{var e=(()=>{"use strict";return e=>{const n={scope:"number",
begin:e.C_NUMBER_RE+"(f(32|64)|i(8|16|32|64)|ii)?",relevance:0},t={
scope:"string",begin:'"',end:'"',illegal:"\\n",contains:[e.BACKSLASH_ESCAPE,{
scope:"subst",begin:/(\$|\%)\{/,end:/\}/}]},a={scope:"title",
begin:/[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/,
relevance:0},i={scope:"title.class",beginKeywords:"class|enum",
end:/[:={\[\n;]|\(/,excludeEnd:!0,
contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,a]},r={
scope:"title.function",beginKeywords:"def",end:/[(\[]/,excludeEnd:!0,
contains:[a]},s={scope:"literal",variants:[{begin:/\?\?\?/},{begin:/\?/,
contains:[a]}]};return{name:"Flix",keywords:{$pattern:e.IDENT_RE+"!?",
keyword:["instance","lawful","law","type","alias","yield","lazy","force","override","def","with","let","sealed","pub","object","if","then","else","for","foreach","import","use","get","set","new","catch","class","case","default","try","match","enum","and","or","not","ref","deref","as","eff","upcast","static","spawn","solve","select","region","par","namespace","without","do","resume","chan","select","inject","project","into","from","where","query","inline","discard"],
literal:["()","true","false","Nil","Some","None","LessThan","EqualTo","GreaterThan","Ok","Err"],
type:["Unit","Bool","Char","Float32","Float64","Int8","Int16","Int32","Int64","String","BigInt"],
built_in:["debug","debug!","debug!!","IO","ef","ef1","ef2","Read","Write","Channel","Eq","PartialOrder","Order","Cmp","List","Map","Set","RedBlackTree","Result","Array","ToString","toString","flip","on","identity","fst","snd","swap",">>","|>","||>","!>","print","println","bug!","unreachable!"]
},contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,t,n,r,i,{scope:"meta",
begin:"@[A-Za-z]+"},s]}}})();hljs.registerLanguage("flix",e)})();